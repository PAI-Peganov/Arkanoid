class Fraction
{
    field int _numerator;
    field int _denominator;

    constructor Fraction new(int numerator, int denominator)
    {
        let _numerator = numerator;
        let _denominator = denominator;
        do setDenominator(Math.min(denominator, 30));
        do Output.printInt(_numerator);
        do Output.printString("/");
        do Output.printInt(_denominator);
        do Output.printString("   ");
        return this;
    }

    method void setDenominator(int newDenominator)
    {
        var int mult;
        
        let newDenominator = Math.min(newDenominator, 30);
        let mult = newDenominator / _denominator;
        let _numerator = Math.min(_numerator * mult, 10000);
        let _denominator = newDenominator;
        // do Output.printString("|");
        // do Output.printInt(_numerator);
        // do Output.printString("/");
        // do Output.printInt(_denominator);
        // do Output.printString("|");
        
        return;
    }

    method int getNumerator()
    {
        return _numerator;
    }

    method int getDenominator()
    {
        return _denominator;
    }

    method Fraction add(Fraction other)
    {
        var int m;
        let m = Math.max(_denominator, other.getDenominator());
        do setDenominator(m);
        do other.setDenominator(m);
        return Fraction.new(_numerator + other.getNumerator(), m);
        // var int div;
        // let div = Fraction.gcd(_denominator, other.getDenominator());
        // do setDenominator(div);
        // do other.setDenominator(div);
        // return Fraction.new(_numerator + other.getNumerator(), div);
    }

    function int gcd(int a, int b)
    {
        var int r;
        while (~(b = 0))
        {
            let r = a - (b * (a / b));
            let a = b;
            let b = r;
        }
        return r;
    }
}