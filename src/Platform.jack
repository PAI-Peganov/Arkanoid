class Platform
{
    field int _x;
    field int _y;
    field int _sx;
    field int _sy;

    constructor Platform new()
    {
        let _x = 0;
        let _y = 256 - 16 - 8;
        let _sx = 64;
        let _sy = 8;
        return this;
    }

    method void clear()
    {
        do Screen.setColor(false);
        do Screen.drawLine(_x, _y, _x + _sx - 1, _y);
        do Screen.drawLine(_x, _y, _x, _y + _sy - 1);
        do Screen.drawLine(_x + _sx - 1, _y, _x + _sx - 1, _y + _sy - 1);
        do Screen.drawLine(_x, _y + _sy - 1, _x + _sx - 1, _y + _sy - 1);
        return;
    }

    method void paint(boolean color)
    {
        do Screen.setColor(color);
        do Screen.drawRectangle(_x, _y, _x + _sx - 1, _y + _sy - 1);
        return;
    }

    method void move(int dir)
    {
        do clear();
        let _x = Math.max(Math.min(_x + dir, 512 - 1 - _sx), 0);
        do paint(true);
        return;
    }

    method int getX()
    {
        return _x;
    }

    method int getY()
    {
        return _y;
    }

    method int getSX()
    {
        return _sx;
    }

    method void dispose()
    {
        do Memory.deAlloc(this);
        return;
    }
}